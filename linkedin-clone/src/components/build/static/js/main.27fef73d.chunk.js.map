{"version":3,"sources":["features/userSlice.js","components/HeaderOption.js","components/firebase.js","components/Header.js","components/Sidebar.js","components/Login.js","components/InputOption.js","components/Post.js","components/Feed.js","components/Widgets.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","HeaderOption","avatar","Icon","title","onClick","useSelector","className","Avatar","email","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","Header","dispatch","useDispatch","src","alt","placeholder","type","HomeIcon","SupervisorAccountIcon","BusinessCenterIcon","ChatIcon","NotificationsIcon","signOut","Sidebar","recentItem","topic","photoUrl","displayName","Login","useState","setEmail","password","setPassword","setName","profilePicture","setProfilePicture","value","onChange","e","target","preventDefault","signInWithEmailAndPassword","then","userAuth","uid","profileUrl","photoURL","catch","error","alert","createUserWithEmailAndPassword","updateProfile","InputOption","color","style","Post","forwardRef","ref","description","message","ThumbUpAltOutlinedIcon","ChatOutlinedIcon","ShareOutlinedIcon","SendOutlinedIcon","Feed","input","setInput","posts","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","event","add","timestamp","FieldValue","serverTimestamp","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","Widgets","newsArticle","heading","subtitle","App","onAuthStateChanged","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.27fef73d.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\n// we are gonna store the information of user in userSlice function\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\n// allow us to pull from data layer whenever we want to\r\n//Selectors : they allow us to pull information\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","import { Avatar } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport '../css/HeaderOption.css';\r\nimport { selectUser } from '../features/userSlice';\r\n// import { Avatar } from \"@material-ui/core\";\r\n// src={user?.photoUrl}\r\n\r\nfunction HeaderOption({avatar, Icon, title, onClick}) {\r\n\r\n    const user = useSelector(selectUser);\r\n    return (\r\n        <div onClick={onClick} className=\"headerOption\">\r\n            {Icon && <Icon className='headerOption__icon' />}\r\n            {avatar &&\r\n                <Avatar className=\"headerOption__icon\"> {user?.email[0]} </Avatar>}\r\n            <h3 className=\"headerOption__title\">{title}</h3>\r\n        </div>\r\n    );\r\n}\r\nexport default HeaderOption;\r\n\r\n","// Pasting firebase config from firebase settings\r\n\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDu9NLgm-xaDNB33ecuucksWDYyO7ISfUk\",\r\n    authDomain: \"linkedin-clone-9da52.firebaseapp.com\",\r\n    projectId: \"linkedin-clone-9da52\",\r\n    storageBucket: \"linkedin-clone-9da52.appspot.com\",\r\n    messagingSenderId: \"1047587981962\",\r\n    appId: \"1:1047587981962:web:b125cdbefa6b1671107b73\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  //It connects everything to firebase database\r\n  const db = firebaseApp.firestore(); //go to the firestore for the database\r\n  const auth = firebase.auth(); //gives access for authentication\r\n\r\n  export {db, auth};\r\n  //because we need both of these variables outside this file","import React from 'react';\r\nimport '../css/Header.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport HeaderOption from './HeaderOption';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout, selectUser } from '../features/userSlice';\r\nimport { auth } from './firebase';\r\n\r\nfunction Header() {\r\n\r\n    // const user = useSelector(selectUser);\r\n    const dispatch = useDispatch();\r\n\r\n    const logoutOfApp = () => {\r\n        dispatch(logout());\r\n        auth.signOut();\r\n    };\r\n\r\n    return (\r\n        <div className=\"headerMain\">\r\n            <div className=\"header__Left\">\r\n                {/* image and search bar */}\r\n                <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQMxPvqaxd_or2KL2SiMkHRPabhfFvIRQhHZA&usqp=CAU\" alt=\"Linkedin logo\"/>\r\n\r\n                <div className=\"header__search\">\r\n                    {/* Search Icon */}\r\n                    <SearchIcon />\r\n                    <input placeholder=\"Search\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"header__right\">\r\n                <HeaderOption Icon={HomeIcon} title='Home' />\r\n                <HeaderOption Icon={SupervisorAccountIcon} title='My Network' />\r\n                <HeaderOption Icon={BusinessCenterIcon} title='Jobs' />\r\n                <HeaderOption Icon={ChatIcon} title='Messaging' />\r\n                <HeaderOption Icon={NotificationsIcon} title='Notifications'  />\r\n                <HeaderOption avatar={true} title=\"me\" \r\n                              onClick={logoutOfApp} /> \r\n            </div>\r\n\r\n      </div>\r\n    )\r\n}\r\nexport default Header;\r\n","\r\nimport { Avatar } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport '../css/Sidebar.css';\r\nimport { selectUser } from '../features/userSlice';\r\n\r\nfunction Sidebar() {\r\n\r\n    const user = useSelector(selectUser);\r\n\r\n    const recentItem = (topic) => (\r\n        <div className=\"sidebar__recentItem\">\r\n           <span className=\"sidebar__hash\">#</span>\r\n           <p>{topic}</p>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className='Sidebar'>\r\n            <div className=\"sidebar__top\">\r\n                <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSMJmEXI49sd-BoXvJF5OeOopycZn_k4O-gaA&usqp=CAU\" alt=\"\"/>\r\n                <Avatar src={user.photoUrl} className=\"sidebar__avatar\">{user.email[0]}</Avatar>\r\n                <h2>{user.displayName}</h2>\r\n                <h4>{user.email}</h4>\r\n            </div>\r\n\r\n            <div className=\"sidebar__stats\">\r\n                <div className=\"sidebar__stat\">\r\n                    <p>Who viewed you</p>\r\n                    <p className=\"sidebar__statNumber\">114</p>\r\n                </div>\r\n                <div className=\"sidebar__stat\">\r\n                    <p>Views of your post</p>\r\n                    <p className=\"sidebar__statNumber\">599</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar__bottom\">\r\n                <p>Recent</p>\r\n                {recentItem('technology')}\r\n                {recentItem('careers')}\r\n                {recentItem('personaldevelopment')}\r\n                {recentItem('bigdata')}\r\n                {recentItem('engineering')}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Sidebar;","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport '../css/Login.css';\r\nimport { auth } from './firebase';\r\nimport {login} from '../features/userSlice';\r\n\r\n    function Login() {\r\n\r\n        const [email, setEmail] = useState(\"\");\r\n        const [password, setPassword] = useState(\"\");\r\n        const [name, setName] = useState(\"\");\r\n        const [profilePicture, setProfilePicture] = useState(\"\");\r\n        const dispatch = useDispatch();\r\n\r\n        const LoginToApp = (e) => {\r\n            // auth\r\n            e.preventDefault();\r\n\r\n            auth.signInWithEmailAndPassword(email, password)\r\n            .then(userAuth => {\r\n                dispatch(login({\r\n                    email : userAuth.user.email,\r\n                    uid : userAuth.user.uid,\r\n                    displayName : userAuth.user.displayName,\r\n                    profileUrl : userAuth.user.photoURL\r\n                })\r\n             )\r\n        }).catch((error) => alert(error));\r\n    };\r\n\r\n        const register = () => {\r\n            if (!name) {\r\n                return alert(\"You need to enter Full Name\");\r\n            }\r\n\r\n            auth.createUserWithEmailAndPassword(email, password) \r\n            .then((userAuth) => {\r\n                userAuth.user.updateProfile({\r\n                    displayName: name,\r\n                    photoURL: profilePicture,\r\n                    // displayName and photoURL are the keys of firebase database and should not be changed\r\n                    // now we need to dispatch this user object into the data layer to be used by other components at any hierarchy\r\n                })\r\n                .then(() => {\r\n                    dispatch(\r\n                        login({\r\n                        email : userAuth.user.email,\r\n                        uid : userAuth.user.uid,\r\n                        displayName : name,\r\n                        photoUrl : profilePicture\r\n                    })\r\n                  );\r\n                });\r\n            })\r\n            .catch((error) => alert(error));\r\n        };\r\n\r\n        return (\r\n            <div className='login'>\r\n                <img src=\"https://1000logos.net/wp-content/uploads/2017/03/Linkedin-Logo.png\" />\r\n                <form>\r\n                    <input value={name}\r\n                           onChange={(e) => setName(e.target.value)}\r\n                           placeholder=\"Full Name(required if registering)\" \r\n                           type=\"text\" />\r\n\r\n                    <input value={profilePicture}\r\n                           onChange={(e) => setProfilePicture(e.target.value)}\r\n                           placeholder=\"Profile picture(optional)\" \r\n                           type=\"text\" />\r\n\r\n                    <input value={email} \r\n                           onChange={(e) => setEmail(e.target.value)} \r\n                           placeholder=\"Email\" \r\n                           type=\"email\" />\r\n\r\n                    <input value={password}\r\n                           onChange={(e) => setPassword(e.target.value)} \r\n                           placeholder=\"Password\" \r\n                           type=\"password\" />\r\n\r\n                    <button type='submit' onClick={LoginToApp}>Sign In</button>\r\n                </form>\r\n                <p>Not a member?{\" \"}<span className=\"login__register\" onClick={register} >Register Now</span></p>\r\n            </div>\r\n        );\r\n    }\r\nexport default Login;","import React from 'react';\r\nimport '../css/InputOption.css';\r\n\r\nfunction InputOption( {Icon, title, color} ) {\r\n    return (\r\n        <div className=\"inputOption\">\r\n            <Icon style={{color : color}} />\r\n            <h4>{title}</h4>\r\n        </div>\r\n    )\r\n}\r\nexport default InputOption;","import React, {forwardRef} from \"react\";\r\nimport \"../css/Post.css\";\r\nimport {Avatar} from '@material-ui/core';\r\nimport  ThumbUpAltOutlinedIcon  from \"@material-ui/icons/ThumbUpAltOutlined\";\r\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\r\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\r\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\r\nimport InputOption from \"./InputOption\";\r\n\r\nconst Post = forwardRef(({name, description, message, photoUrl}, ref) => {\r\n    return (\r\n        <div ref={ref} className=\"post\">\r\n            <div className=\"post__header\">\r\n                <Avatar src={photoUrl}>{name[0]}</Avatar>\r\n                <div className=\"post__info\">\r\n                    <h2>{name}</h2>\r\n                    <p>{description}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"post__body\">\r\n                <p>{message}</p>\r\n            </div>\r\n\r\n            <div className=\"post__buttons\">\r\n                <InputOption Icon={ThumbUpAltOutlinedIcon} \r\n                            title=\"Like\"\r\n                            color=\"gray\" />\r\n                \r\n                <InputOption Icon={ChatOutlinedIcon} \r\n                            title=\"Comment\"\r\n                            color=\"gray\" />\r\n\r\n                <InputOption Icon={ShareOutlinedIcon} \r\n                            title=\"Share\"\r\n                            color=\"gray\" />\r\n\r\n                <InputOption Icon={SendOutlinedIcon} \r\n                            title=\"Send\"\r\n                            color=\"gray\" />\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\nexport default Post;","import React, {useEffect, useState} from 'react';\r\nimport '../css/Feed.css';\r\nimport InputOption from './InputOption';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\r\nimport EventNoteIcon from '@material-ui/icons/EventNote';\r\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\r\nimport Post from './Post';\r\nimport { db } from './firebase';\r\nimport firebase from 'firebase';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../features/userSlice';\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction Feed() {\r\n\r\n    const user = useSelector(selectUser);\r\n\r\n    //React Hooks (Very powerful, used to initialize and then set to some other value)\r\n    //server side rendering\r\n    const [input, setInput] = useState('');\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    //fire when the feed component loads\r\n    useEffect(() => {\r\n        db.collection(\"posts\")\r\n        .orderBy(\"timestamp\",'desc')\r\n        .onSnapshot((snapshot) => \r\n            setPosts(snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                data: doc.data()\r\n            }))\r\n        )\r\n      );\r\n    },[]);\r\n\r\n    const sendPost = event => {\r\n        event.preventDefault();\r\n        db.collection('posts').add({\r\n            name : user.displayName,\r\n            description : user.email,\r\n            message : input,\r\n            photoUrl : user.photoUrl || \"\",\r\n            timestamp : firebase.firestore.FieldValue.serverTimestamp()\r\n        });\r\n\r\n        setInput('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n            <div className=\"feed__inputContainer\">\r\n                <div className=\"feed__input\">\r\n                    <CreateIcon />\r\n                    <form>\r\n                        <input value={input} onChange={e => setInput(e.target.value)} type=\"text\" />\r\n                        <button onClick={sendPost}  type=\"submit\">Send</button>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"feed__inputOptions\">\r\n                    <InputOption Icon={ImageIcon} title='Photo' color='#70B5F9' />\r\n                    <InputOption Icon={SubscriptionsIcon} title='Video' color='#E7A33E' />\r\n                    <InputOption Icon={EventNoteIcon} title='Event' color='#C0CBCD' />\r\n                    <InputOption Icon={CalendarViewDayIcon} title='Write Article' color='#7FC15E' />\r\n                </div>\r\n            </div>\r\n\r\n            {/* <Posts /> */}\r\n            {/* pushed into the list */}\r\n        <FlipMove>\r\n            {posts.map(({ id, data : {name, description, message, photoUrl} }) => (\r\n                <Post \r\n                key={id} \r\n                // we need key because we want the last unique element to come at the top\r\n                name={ name }\r\n                description= {description}\r\n                message= {message}\r\n                photoUrl = {photoUrl} \r\n                />\r\n             ))}\r\n        </FlipMove>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed;","import React from 'react';\r\nimport \"../css/Widgets.css\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\n\r\nfunction Widgets() {\r\n\r\n    const newsArticle = (heading, subtitle) => (\r\n        <div className=\"widgets__article\">\r\n            <div className=\"widgets__articleLeft\">\r\n                <FiberManualRecordIcon />\r\n            </div>\r\n            <div className=\"widgets__articleRight\">\r\n                <h4>{heading}</h4>\r\n                <p>{subtitle}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div className=\"widgets\">\r\n            <div className=\"widgets__header\">\r\n                <h2>LinkedIn News</h2>\r\n                <InfoIcon />\r\n            </div>\r\n\r\n            {newsArticle(\"News of 2021\",\"Top News-9099 Readers\")}\r\n            {newsArticle(\"CoronaVirus: India Updates\",\"Top News-886 Readers\")}\r\n            {newsArticle(\"Tesla Hits New Highs\",\"Cars and Auto-300 Readers\")}\r\n            {newsArticle(\"Bitcoin Breaks $22k\",\"Crypto-8000 Readers\")}\r\n            {newsArticle(\"Is Redux too good?\",\"Code-123 Readers\")}\r\n            {newsArticle(\"PAPA react launches course?\",\"Top News-6503 Readers\")}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Widgets;","import React, { useEffect } from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport SideBar from './components/Sidebar';\r\nimport Login from './components/Login';\r\nimport Feed from './components/Feed';\r\nimport Widgets from './components/Widgets';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout, selectUser, login } from './features/userSlice';\r\nimport { auth } from './components/firebase';\r\n\r\nfunction App() {\r\n\r\n  //pull user from datalayer(i.e.Redux) using the Redux function\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    //to persist with the authentication so that we dont get logged out after refreshing\r\n    auth.onAuthStateChanged(userAuth => {\r\n      if (userAuth) {\r\n        //user is logged in\r\n        dispatch(login({\r\n          email : userAuth.email,\r\n          uid : userAuth.uid,\r\n          displayName : userAuth.displayName,\r\n          photoURL : userAuth.photoURL\r\n        }))\r\n      } else {\r\n        // user is logged out\r\n        dispatch(logout());\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"app\">\r\n        {/* Header */}\r\n        <Header />\r\n        \r\n        {\r\n          !user ?\r\n           (<Login />) :\r\n            \r\n            //  App Body\r\n            <div className=\"app__body\">\r\n              <SideBar />\r\n              <Feed />\r\n              <Widgets /> \r\n            </div>\r\n        }\r\n        \r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../features/userSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}